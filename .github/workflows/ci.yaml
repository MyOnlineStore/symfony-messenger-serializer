name: CI

on:
    push:
        branches-ignore:
            - 'master'
        tags-ignore:
            - '**'

jobs:
    test:
        name: Test

        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                php-version:
                    - '7.2'
                    - '8.0'

        steps:
            # Setup
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    coverage: pcov
                    ini-values: assert.exception=1, zend.assertions=1
                    php-version: ${{ matrix.php-version}}
                    tools: cs2pr

            -   name: Cache Dependencies
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.composer/cache
                        vendor
                    key: php-${{ matrix.php-version}}
                    restore-keys: php-${{ matrix.php-version}}

            -   name: Install Dependencies
                run: composer install --no-interaction --no-progress

            # Test
            -   name: Codestyle
                run: php vendor/bin/phpcs --parallel=`nproc --all` -q --report=checkstyle | cs2pr

            -   name: Psalm
                run: php vendor/bin/psalm --threads=`nproc --all` --output-format=github --shepherd --stats

            -   name: PHPUnit Checks Matcher
                run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            -   name: Unit Tests
                run: |
                    php vendor/bin/phpunit --coverage-text=coverage.txt --colors=never
                    COVERAGE=$(php -r 'preg_match("#Lines:\s*(\d+.\d+)%#", file_get_contents("coverage.txt"), $out); echo $out[1];')
                    echo "COVERAGE=${COVERAGE}" >> $GITHUB_ENV

            # Report
            -   name: Report PR Status
                uses: actions/github-script@v4
                with:
                    github-token: ${{secrets.GITHUB_TOKEN}}
                    script: |
                        const coverage = parseFloat(process.env.COVERAGE);

                        github.repos.createCommitStatus({...context.repo, sha: context.sha, state: coverage > 99 ? 'success' : 'failure', context: 'Unit Test Coverage', description: coverage+'%'});
